<?php

namespace DoctrineORMModule\Proxy\__CG__\Application\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class SystemUser extends \Application\Entity\SystemUser implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array();



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return array('__isInitialized__', '' . "\0" . 'Application\\Entity\\SystemUser' . "\0" . 'id', '' . "\0" . 'Application\\Entity\\SystemUser' . "\0" . 'username', '' . "\0" . 'Application\\Entity\\SystemUser' . "\0" . 'password', '' . "\0" . 'Application\\Entity\\SystemUser' . "\0" . 'displayName', '' . "\0" . 'Application\\Entity\\SystemUser' . "\0" . 'hoTen', '' . "\0" . 'Application\\Entity\\SystemUser' . "\0" . 'diaChi', '' . "\0" . 'Application\\Entity\\SystemUser' . "\0" . 'email', '' . "\0" . 'Application\\Entity\\SystemUser' . "\0" . 'state', '' . "\0" . 'Application\\Entity\\SystemUser' . "\0" . 'moTa', '' . "\0" . 'Application\\Entity\\SystemUser' . "\0" . 'dienThoaiCoDinh', '' . "\0" . 'Application\\Entity\\SystemUser' . "\0" . 'diDong', '' . "\0" . 'Application\\Entity\\SystemUser' . "\0" . 'twitter', '' . "\0" . 'Application\\Entity\\SystemUser' . "\0" . 'roles');
        }

        return array('__isInitialized__', '' . "\0" . 'Application\\Entity\\SystemUser' . "\0" . 'id', '' . "\0" . 'Application\\Entity\\SystemUser' . "\0" . 'username', '' . "\0" . 'Application\\Entity\\SystemUser' . "\0" . 'password', '' . "\0" . 'Application\\Entity\\SystemUser' . "\0" . 'displayName', '' . "\0" . 'Application\\Entity\\SystemUser' . "\0" . 'hoTen', '' . "\0" . 'Application\\Entity\\SystemUser' . "\0" . 'diaChi', '' . "\0" . 'Application\\Entity\\SystemUser' . "\0" . 'email', '' . "\0" . 'Application\\Entity\\SystemUser' . "\0" . 'state', '' . "\0" . 'Application\\Entity\\SystemUser' . "\0" . 'moTa', '' . "\0" . 'Application\\Entity\\SystemUser' . "\0" . 'dienThoaiCoDinh', '' . "\0" . 'Application\\Entity\\SystemUser' . "\0" . 'diDong', '' . "\0" . 'Application\\Entity\\SystemUser' . "\0" . 'twitter', '' . "\0" . 'Application\\Entity\\SystemUser' . "\0" . 'roles');
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (SystemUser $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', array());
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', array());
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function setId($id)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setId', array($id));

        return parent::setId($id);
    }

    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', array());

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setUsername($username)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUsername', array($username));

        return parent::setUsername($username);
    }

    /**
     * {@inheritDoc}
     */
    public function getUsername()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUsername', array());

        return parent::getUsername();
    }

    /**
     * {@inheritDoc}
     */
    public function setPassword($password)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPassword', array($password));

        return parent::setPassword($password);
    }

    /**
     * {@inheritDoc}
     */
    public function getPassword()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPassword', array());

        return parent::getPassword();
    }

    /**
     * {@inheritDoc}
     */
    public function setDisplayName($displayName)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDisplayName', array($displayName));

        return parent::setDisplayName($displayName);
    }

    /**
     * {@inheritDoc}
     */
    public function getDisplayName()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDisplayName', array());

        return parent::getDisplayName();
    }

    /**
     * {@inheritDoc}
     */
    public function setHoTen($hoTen)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setHoTen', array($hoTen));

        return parent::setHoTen($hoTen);
    }

    /**
     * {@inheritDoc}
     */
    public function getHoTen()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getHoTen', array());

        return parent::getHoTen();
    }

    /**
     * {@inheritDoc}
     */
    public function setDiaChi($diaChi)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDiaChi', array($diaChi));

        return parent::setDiaChi($diaChi);
    }

    /**
     * {@inheritDoc}
     */
    public function getDiaChi()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDiaChi', array());

        return parent::getDiaChi();
    }

    /**
     * {@inheritDoc}
     */
    public function setState($state)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setState', array($state));

        return parent::setState($state);
    }

    /**
     * {@inheritDoc}
     */
    public function getState()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getState', array());

        return parent::getState();
    }

    /**
     * {@inheritDoc}
     */
    public function setEmail($email)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setEmail', array($email));

        return parent::setEmail($email);
    }

    /**
     * {@inheritDoc}
     */
    public function getEmail()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEmail', array());

        return parent::getEmail();
    }

    /**
     * {@inheritDoc}
     */
    public function setMoTa($moTa)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setMoTa', array($moTa));

        return parent::setMoTa($moTa);
    }

    /**
     * {@inheritDoc}
     */
    public function getMoTa()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMoTa', array());

        return parent::getMoTa();
    }

    /**
     * {@inheritDoc}
     */
    public function setDienThoaiCoDinh($dienThoaiCoDinh)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDienThoaiCoDinh', array($dienThoaiCoDinh));

        return parent::setDienThoaiCoDinh($dienThoaiCoDinh);
    }

    /**
     * {@inheritDoc}
     */
    public function getDienThoaiCoDinh()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDienThoaiCoDinh', array());

        return parent::getDienThoaiCoDinh();
    }

    /**
     * {@inheritDoc}
     */
    public function setDiDong($diDong)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDiDong', array($diDong));

        return parent::setDiDong($diDong);
    }

    /**
     * {@inheritDoc}
     */
    public function getDiDong()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDiDong', array());

        return parent::getDiDong();
    }

    /**
     * {@inheritDoc}
     */
    public function setTwitter($twitter)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTwitter', array($twitter));

        return parent::setTwitter($twitter);
    }

    /**
     * {@inheritDoc}
     */
    public function getTwitter()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTwitter', array());

        return parent::getTwitter();
    }

    /**
     * {@inheritDoc}
     */
    public function getRoles()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRoles', array());

        return parent::getRoles();
    }

    /**
     * {@inheritDoc}
     */
    public function addRole($role)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addRole', array($role));

        return parent::addRole($role);
    }

}
